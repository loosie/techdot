plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.moowork.node' version '1.3.1'
}

group = 'com.techdot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	gradlePluginPortal()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2:1.4.199'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'com.moowork.gradle:gradle-node-plugin:1.3.1'

}

def generated = 'generated'

sourceSets {
	main {
		java {
			srcDirs += generated
		}
	}

}

tasks.named('test') {
	useJUnitPlatform()
}

apply plugin: "com.moowork.node"

tasks.register("npm-Install") {
	group = "application"
	description = "Installs dependencies from package.json"
	tasks.appNpmInstall.exec();
}

task appNpmInstall(type: NpmTask) {
	description = "Installs dependencies from package.json"
	workingDir = file("/src/main/resources/static")
	args = ['install']
}

clean.doLast{
	file(generated).deleteDir()
}

